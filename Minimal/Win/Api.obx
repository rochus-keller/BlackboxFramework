// Automatically generated by the tree shaker of Oberon+ IDE on 2021-02-04T15:33:05
// manually modified

definition Api
	import
		SYSTEM, Ole.COM
	const 
		HKEY_CURRENT_USER = 2147483649 
		INVALID_HANDLE_VALUE = -1 
		NULL = 0 
		FALSE_ = 0 
		TRUE_ = 1 
		TIME_ZONE_ID_DAYLIGHT = {1}  
		FILE_SHARE_READ = {0}  
		FILE_ATTRIBUTE_READONLY = {0}  
		FILE_ATTRIBUTE_HIDDEN = {1}  
		FILE_ATTRIBUTE_SYSTEM = {2}  
		FILE_ATTRIBUTE_DIRECTORY = {4}  
		FILE_ATTRIBUTE_ARCHIVE = {5}  
		FILE_ATTRIBUTE_TEMPORARY = {8}  
		GENERIC_READ = {31}  
		GENERIC_WRITE = {30}  
		REG_SZ = 1 
		CREATE_NEW = 1 
		OPEN_EXISTING = 3 
		CREATE_NO_WINDOW = {27}  
		FORMAT_MESSAGE_FROM_SYSTEM = {12}  
		FORMAT_MESSAGE_ARGUMENT_ARRAY = {13}  
		ERROR_NO_ASSOCIATION = 1155 
		S_OK = 0 
		DRAGDROP_S_DROP = 262400 
		DRAGDROP_S_CANCEL = 262401 
		DRAGDROP_S_USEDEFAULTCURSORS = 262402 
		HALFTONE = 4 
		TRANSPARENT = 1 
		WHITE_BRUSH = 0 
		BLACK_BRUSH = 4 
		NULL_BRUSH = 5 
		NULL_PEN = 8 
		ANSI_VAR_FONT = 12 
		SYSTEM_FONT = 13 
		DEFAULT_GUI_FONT = 17 
		PS_SOLID = 0 
		HORZRES = 8 
		VERTRES = 10 
		LOGPIXELSX = 88 
		LOGPIXELSY = 90 
		PHYSICALWIDTH = 110 
		PHYSICALHEIGHT = 111 
		PHYSICALOFFSETX = 112 
		PHYSICALOFFSETY = 113 
		DM_ORIENTATION = {0}  
		DMORIENT_PORTRAIT = 1 
		DMORIENT_LANDSCAPE = 2 
		SB_HORZ = 0 
		SB_VERT = 1 
		SB_CTL = 2 
		SB_BOTH = 3 
		SB_LINEUP = 0 
		SB_LINEDOWN = 1 
		SB_PAGEUP = 2 
		SB_PAGEDOWN = 3 
		SB_THUMBPOSITION = 4 
		SB_THUMBTRACK = 5 
		SW_HIDE = 0 
		SW_NORMAL = 1 
		SW_SHOW = 5 
		SW_RESTORE = 9 
		VK_TAB = 9 
		VK_SHIFT = 16 
		VK_CONTROL = 17 
		VK_MENU = 18 
		VK_LEFT = 37 
		VK_UP = 38 
		VK_RIGHT = 39 
		VK_DOWN = 40 
		WM_CREATE = 1 
		WM_DESTROY = 2 
		WM_SIZE = 5 
		WM_ACTIVATE = 6 
		WM_SETFOCUS = 7 
		WM_KILLFOCUS = 8 
		WM_PAINT = 15 
		WM_CLOSE = 16 
		WM_QUERYENDSESSION = 17 
		WM_ERASEBKGND = 20 
		WM_SYSCOLORCHANGE = 21 
		WM_ACTIVATEAPP = 28 
		WM_SETCURSOR = 32 
		WM_CHILDACTIVATE = 34 
		WM_DRAWITEM = 43 
		WM_MEASUREITEM = 44 
		WM_SETFONT = 48 
		WM_WINDOWPOSCHANGED = 71 
		WM_NOTIFY = 78 
		WM_NCHITTEST = 132 
		WM_NCPAINT = 133 
		WM_NCACTIVATE = 134 
		WM_NCLBUTTONDOWN = 161 
		WM_NCLBUTTONUP = 162 
		WM_NCRBUTTONDOWN = 164 
		WM_NCRBUTTONUP = 165 
		WM_KEYDOWN = 256 
		WM_KEYUP = 257 
		WM_CHAR = 258 
		WM_SYSKEYDOWN = 260 
		WM_SYSCHAR = 262 
		WM_COMMAND = 273 
		WM_TIMER = 275 
		WM_HSCROLL = 276 
		WM_VSCROLL = 277 
		WM_INITMENUPOPUP = 279 
		WM_CTLCOLORMSGBOX = 306 
		WM_CTLCOLORSTATIC = 312 
		WM_MOUSEMOVE = 512 
		WM_LBUTTONDOWN = 513 
		WM_LBUTTONUP = 514 
		WM_LBUTTONDBLCLK = 515 
		WM_RBUTTONDOWN = 516 
		WM_RBUTTONUP = 517 
		WM_RBUTTONDBLCLK = 518 
		WM_MBUTTONDOWN = 519 
		WM_MBUTTONUP = 520 
		WM_MBUTTONDBLCLK = 521 
		WM_MOUSEWHEEL = 522 
		WM_MDICREATE = 544 
		WM_MDIDESTROY = 545 
		WM_MDIACTIVATE = 546 
		WM_MDIRESTORE = 547 
		WM_MDITILE = 550 
		WM_MDICASCADE = 551 
		WM_MDIICONARRANGE = 552 
		WM_MDISETMENU = 560 
		WM_DROPFILES = 563 
		WM_CUT = 768 
		WM_COPY = 769 
		WM_PASTE = 770 
		WM_CLEAR = 771 
		HTBORDER = 18 
		SIZE_MAXSHOW = 3 
		SIZE_MAXHIDE = 4 
		MK_LBUTTON = {0}  
		MK_RBUTTON = {1}  
		MK_SHIFT = {2}  
		MK_CONTROL = {3}  
		MK_MBUTTON = {4}  
		WS_CHILD = {30}  
		WS_VISIBLE = {28}  
		WS_CAPTION = {22, 23}  
		WS_BORDER = {23}  
		WS_DLGFRAME = {22}  
		WS_SYSMENU = {19}  
		WS_THICKFRAME = {18}  
		WS_MINIMIZEBOX = {17}  
		WS_MAXIMIZEBOX = {16}  
		WS_EX_DLGMODALFRAME = {0}  
		WS_EX_CLIENTEDGE = {9}  
		WS_EX_APPWINDOW = {18}  
		CS_VREDRAW = {0}  
		CS_HREDRAW = {1}  
		CS_DBLCLKS = {3}  
		CS_OWNDC = {5}  
		WPF_SETMINPOSITION = {0}  
		WPF_RESTORETOMAXIMIZED = {1}  
		CW_USEDEFAULT = 2147483648 
		SWP_NOSIZE = {0}  
		SWP_NOMOVE = {1}  
		SWP_NOZORDER = {2}  
		SWP_NOREDRAW = {3}  
		SWP_NOACTIVATE = {4}  
		SWP_FRAMECHANGED = {5}  
		HWND_BOTTOM = 1 
		SM_SWAPBUTTON = 23 
		ESB_ENABLE_BOTH = 0 
		ESB_DISABLE_BOTH = 3 
		MB_OK = {}  
		MB_OKCANCEL = {0}  
		MB_YESNOCANCEL = {0, 1}  
		MB_YESNO = {2}  
		MB_ICONQUESTION = {5}  
		MB_ICONWARNING = {4, 5}  
		MB_ICONERROR = {4}  
		GW_HWNDPREV = 3 
		MF_BYCOMMAND = {}  
		MF_BYPOSITION = {10}  
		MF_SEPARATOR = {11}  
		MF_GRAYED = {0}  
		MF_CHECKED = {3}  
		MF_STRING = {}  
		MF_POPUP = {4}  
		SC_MOVE = 61456 
		IDC_ARROW = 32512 
		IDC_IBEAM = 32513 
		IDC_WAIT = 32514 
		IDC_CROSS = 32515 
		IDC_SIZE = 32640 
		IDC_SIZENWSE = 32642 
		IDC_SIZENESW = 32643 
		IDC_SIZEWE = 32644 
		IDC_SIZENS = 32645 
		IDC_NO = 32648 
		IMAGE_ICON = 1 
		LR_LOADTRANSPARENT = {5}  
		IDI_APPLICATION = 32512 
		IDOK = 1 
		IDCANCEL = 2 
		IDYES = 6 
		IDNO = 7 
		EN_CHANGE = 768 
		EM_GETSEL = 176 
		EM_SETSEL = 177 
		EM_LIMITTEXT = 197 
		EM_UNDO = 199 
		EM_POSFROMCHAR = 214 
		BN_CLICKED = 0 
		BM_GETCHECK = 240 
		BM_SETCHECK = 241 
		BM_SETSTATE = 243 
		SS_LEFT = {}  
		SS_CENTER = {0}  
		SS_RIGHT = {1}  
		LB_ERR = -1 
		LBN_SELCHANGE = 1 
		LB_ADDSTRING = 384 
		LB_RESETCONTENT = 388 
		LB_SETSEL = 389 
		LB_SETCURSEL = 390 
		LB_GETSEL = 391 
		LB_GETCURSEL = 392 
		LB_GETCOUNT = 395 
		LB_SETHORIZONTALEXTENT = 404 
		LB_GETITEMRECT = 408 
		LB_GETITEMDATA = 409 
		LB_SETITEMDATA = 410 
		LBS_EXTENDEDSEL = {11}  
		CBN_SELCHANGE = 1 
		CBN_EDITCHANGE = 5 
		CB_GETEDITSEL = 320 
		CB_LIMITTEXT = 321 
		CB_SETEDITSEL = 322 
		CB_ADDSTRING = 323 
		CB_GETCOUNT = 326 
		CB_GETCURSEL = 327 
		CB_GETLBTEXT = 328 
		CB_RESETCONTENT = 331 
		CB_SETCURSEL = 334 
		CB_SHOWDROPDOWN = 335 
		CB_GETITEMDATA = 336 
		CB_SETITEMDATA = 337 
		CB_GETITEMHEIGHT = 340 
		CB_SETEXTENDEDUI = 341 
		CB_FINDSTRINGEXACT = 344 
		SPI_GETWORKAREA = 48 
		LOCALE_SDATE = 29 
		LOCALE_STIME = 30 
		LOCALE_SLONGDATE = 32 
		LOCALE_IDATE = 33 
		LOCALE_ITIME = 35 
		LOCALE_S1159 = 40 
		LOCALE_S2359 = 41 
		DATE_SHORTDATE = {0}  
		DATE_LONGDATE = {1}  
	type 
		PtrVoid = integer 
		PtrSTR = unsafe pointer to carray of char 
		PtrWSTR = unsafe pointer to carray of wchar 
		BOOL = integer 
		HANDLE = PtrVoid 
		LCID = integer 
		WPARAM = integer 
		LPARAM = integer 
		LRESULT = integer 
		HWND = HANDLE 
		ATOM = shortint 
		HGLOBAL = HANDLE 
		FARPROC = proc (): integer 
		HGDIOBJ = HANDLE 
		HBITMAP = HANDLE 
		HBRUSH = HANDLE 
		HDC = HANDLE 
		HENHMETAFILE = HANDLE 
		HMETAFILEPICT = HANDLE 
		HFONT = HANDLE 
		HICON = HANDLE 
		HMENU = HANDLE 
		HMETAFILE = HANDLE 
		HINSTANCE = HANDLE 
		HMODULE = HINSTANCE 
		HPEN = HANDLE 
		HRGN = HANDLE 
		HCURSOR = HICON 
		COLORREF = integer 
		RECT = cstruct 
					left: integer
					top: integer
					right: integer
					bottom: integer
				end 
		POINT = cstruct 
					x: integer
					y: integer
				end 
		SIZE = cstruct 
					cx: integer
					cy: integer
				end 
		OVERLAPPED = cstruct 
					Internal: integer
					InternalHigh: integer
					Offset: integer
					OffsetHigh: integer
					hEvent: HANDLE
				end 
		SECURITY_ATTRIBUTES = cstruct 
					nLength: integer
					lpSecurityDescriptor: PtrVoid
					bInheritHandle: BOOL
				end 
		PROCESS_INFORMATION = cstruct 
					hProcess: HANDLE
					hThread: HANDLE
					dwProcessId: integer
					dwThreadId: integer
				end 
		FILETIME = cstruct 
					dwLowDateTime: integer
					dwHighDateTime: integer
				end 
		SYSTEMTIME = cstruct 
					wYear: shortint
					wMonth: shortint
					wDayOfWeek: shortint
					wDay: shortint
					wHour: shortint
					wMinute: shortint
					wSecond: shortint
					wMilliseconds: shortint
				end 
		THREAD_START_ROUTINE = proc (lpThreadParameter: PtrVoid): integer 
		TIME_ZONE_INFORMATION = cstruct 
					Bias: integer
					StandardName: carray 32 of wchar
					StandardDate: SYSTEMTIME
					StandardBias: integer
					DaylightName: carray 32 of wchar
					DaylightDate: SYSTEMTIME
					DaylightBias: integer
				end 
		STARTUPINFOW = cstruct 
					cb: integer
					lpReserved: PtrWSTR
					lpDesktop: PtrWSTR
					lpTitle: PtrWSTR
					dwX: integer
					dwY: integer
					dwXSize: integer
					dwYSize: integer
					dwXCountChars: integer
					dwYCountChars: integer
					dwFillAttribute: integer
					dwFlags: set
					wShowWindow: shortint
					cbReserved2: shortint
					lpReserved2: unsafe pointer to carray of char
					hStdInput: HANDLE
					hStdOutput: HANDLE
					hStdError: HANDLE
				end 
		WIN32_FIND_DATAW = cstruct 
					dwFileAttributes: set
					ftCreationTime: FILETIME
					ftLastAccessTime: FILETIME
					ftLastWriteTime: FILETIME
					nFileSizeHigh: integer
					nFileSizeLow: integer
					dwReserved0: integer
					dwReserved1: integer
					cFileName: carray 260 of wchar
					cAlternateFileName: carray 14 of wchar
				end 
		TEXTMETRICW = cstruct 
					tmHeight: integer
					tmAscent: integer
					tmDescent: integer
					tmInternalLeading: integer
					tmExternalLeading: integer
					tmAveCharWidth: integer
					tmMaxCharWidth: integer
					tmWeight: integer
					tmOverhang: integer
					tmDigitizedAspectX: integer
					tmDigitizedAspectY: integer
					tmFirstChar: wchar
					tmLastChar: wchar
					tmDefaultChar: wchar
					tmBreakChar: wchar
					tmItalic: char
					tmUnderlined: char
					tmStruckOut: char
					tmPitchAndFamily: char
					tmCharSet: char
				end 
		NEWTEXTMETRICW = cstruct 
					tmHeight: integer
					tmAscent: integer
					tmDescent: integer
					tmInternalLeading: integer
					tmExternalLeading: integer
					tmAveCharWidth: integer
					tmMaxCharWidth: integer
					tmWeight: integer
					tmOverhang: integer
					tmDigitizedAspectX: integer
					tmDigitizedAspectY: integer
					tmFirstChar: wchar
					tmLastChar: wchar
					tmDefaultChar: wchar
					tmBreakChar: wchar
					tmItalic: char
					tmUnderlined: char
					tmStruckOut: char
					tmPitchAndFamily: char
					tmCharSet: char
					ntmFlags: integer
					ntmSizeEM: integer
					ntmCellHeight: integer
					ntmAvgWidth: integer
				end 
		LOGFONTW = cstruct 
					lfHeight: integer
					lfWidth: integer
					lfEscapement: integer
					lfOrientation: integer
					lfWeight: integer
					lfItalic: char
					lfUnderline: char
					lfStrikeOut: char
					lfCharSet: char
					lfOutPrecision: char
					lfClipPrecision: char
					lfQuality: char
					lfPitchAndFamily: char
					lfFaceName: carray 32 of wchar
				end 
		PtrLOGFONTW = unsafe pointer to LOGFONTW 
		ENUMLOGFONTW = cstruct 
					elfLogFont: LOGFONTW
					elfFullName: carray 64 of wchar
					elfStyle: carray 32 of wchar
				end 
		DEVMODEW = cstruct 
					dmDeviceName: carray 32 of wchar
					dmSpecVersion: shortint
					dmDriverVersion: shortint
					dmSize: shortint
					dmDriverExtra: shortint
					dmFields: set
					dmOrientation: shortint
					dmPaperSize: shortint
					dmPaperLength: shortint
					dmPaperWidth: shortint
					dmScale: shortint
					dmCopies: shortint
					dmDefaultSource: shortint
					dmPrintQuality: shortint
					dmColor: shortint
					dmDuplex: shortint
					dmYResolution: shortint
					dmTTOption: shortint
					dmCollate: shortint
					dmFormName: carray 32 of wchar
					dmLogPixels: shortint
					dmBitsPerPel: integer
					dmPelsWidth: integer
					dmPelsHeight: integer
					dmDisplayFlags: set
					dmDisplayFrequency: integer
					dmICMMethod: integer
					dmICMIntent: integer
					dmMediaType: integer
					dmDitherType: integer
					dmICCManufacturer: integer
					dmICCModel: integer
					dmPanningWidth: integer
					dmPanningHeight: integer
				end 
		PtrDEVMODEW = unsafe pointer to DEVMODEW 
		ABC = cstruct 
					abcA: integer
					abcB: integer
					abcC: integer
				end 
		NEWFONTENUMPROCW = proc (var lpelf: ENUMLOGFONTW; var lpntm: NEWTEXTMETRICW; FontType: integer; lParam: integer): integer 
		ABORTPROC = proc (hdc: HDC; iError: integer): integer 
		DOCINFOW = cstruct 
					cbSize: integer
					lpszDocName: PtrWSTR
					lpszOutput: PtrWSTR
					lpszDatatype: PtrWSTR
					fwType: integer
				end 
		WNDPROC = proc (p0: HWND; p1: integer; p2: WPARAM; p3: LPARAM): LRESULT 
		TIMERPROC = proc (): integer 
		PtrCREATESTRUCTW = unsafe pointer to CREATESTRUCTW 
		WNDCLASSW = cstruct 
					style: set
					lpfnWndProc: WNDPROC
					cbClsExtra: integer
					cbWndExtra: integer
					hInstance: HINSTANCE
					hIcon: HICON
					hCursor: HCURSOR
					hbrBackground: HBRUSH
					lpszMenuName: PtrWSTR
					lpszClassName: PtrWSTR
				end 
		MSG = cstruct 
					hwnd: HWND
					message: integer
					wParam: WPARAM
					lParam: LPARAM
					time: integer
					pt: POINT
				end 
		WINDOWPOS = cstruct 
					hwnd: HWND
					hwndInsertAfter: HWND
					x: integer
					y: integer
					cx: integer
					cy: integer
					flags: set
				end 
		PAINTSTRUCT = cstruct 
					hdc: HDC
					fErase: BOOL
					rcPaint: RECT
					fRestore: BOOL
					fIncUpdate: BOOL
					rgbReserved: carray 32 of char
				end 
		CREATESTRUCTW = cstruct 
					lpCreateParams: PtrVoid
					hInstance: HINSTANCE
					hMenu: HMENU
					hwndParent: HWND
					cy: integer
					cx: integer
					y: integer
					x: integer
					style: set
					lpszName: PtrWSTR
					lpszClass: PtrWSTR
					dwExStyle: set
				end 
		WINDOWPLACEMENT = cstruct 
					length: integer
					flags: set
					showCmd: integer
					ptMinPosition: POINT
					ptMaxPosition: POINT
					rcNormalPosition: RECT
				end 
		NMHDR = cstruct 
					hwndFrom: HWND
					idFrom: integer
					code: integer
				end 
		PtrNMHDR = unsafe pointer to NMHDR 
		MEASUREITEMSTRUCT = cstruct 
					CtlType: set
					CtlID: integer
					itemID: integer
					itemWidth: integer
					itemHeight: integer
					itemData: integer
				end 
		PtrMEASUREITEMSTRUCT = unsafe pointer to MEASUREITEMSTRUCT 
		DRAWITEMSTRUCT = cstruct 
					CtlType: set
					CtlID: integer
					itemID: integer
					itemAction: set
					itemState: set
					hwndItem: HWND
					hDC: HDC
					rcItem: RECT
					itemData: integer
				end 
		PtrDRAWITEMSTRUCT = unsafe pointer to DRAWITEMSTRUCT 
		SCROLLINFO = cstruct 
					cbSize: integer
					fMask: set
					nMin: integer
					nMax: integer
					nPage: integer
					nPos: integer
					nTrackPos: integer
				end 
		MDICREATESTRUCTW = cstruct 
					szClass: PtrWSTR
					szTitle: PtrWSTR
					hOwner: HANDLE
					x: integer
					y: integer
					cx: integer
					cy: integer
					style: set
					lParam: LPARAM
				end 
		PtrMDICREATESTRUCTW = unsafe pointer to MDICREATESTRUCTW 
		CLIENTCREATESTRUCT = cstruct 
					hWindowMenu: HANDLE
					idFirstChild: integer
				end 
		LCTYPE = integer 
		HKEY = HANDLE 
		HDROP = HANDLE 
		SHELLEXECUTEINFOW = cstruct 
					cbSize: integer
					fMask: set
					hwnd: HWND
					lpVerb: PtrWSTR
					lpFile: PtrWSTR
					lpParameters: PtrWSTR
					lpDirectory: PtrWSTR
					nShow: integer
					hInstApp: HINSTANCE
					lpIDList: PtrVoid
					lpClass: PtrWSTR
					hkeyClass: HKEY
					dwHotKey: integer
					hIcon: HANDLE
					hProcess: HANDLE
				end 
	
		proc GetProcAddress(hModule: HMODULE; lpProcName: PtrSTR): FARPROC 
		proc GetVersion(): integer 
		proc GlobalLock(hMem: HGLOBAL): PtrVoid 
		proc GlobalUnlock(hMem: HGLOBAL): BOOL 
		proc CreateThread(var lpThreadAttributes: SECURITY_ATTRIBUTES; dwStackSize: integer; lpStartAddress: THREAD_START_ROUTINE; lpParameter: PtrVoid; dwCreationFlags: set; lpThreadId: unsafe pointer to integer): HANDLE 
		proc GetLastError(): integer 
		proc SetLastError(dwErrCode: integer) 
		proc Sleep(dwMilliseconds: integer) 
		proc GlobalDeleteAtom(nAtom: ATOM): ATOM 
		proc GetFileSize(hFile: HANDLE; var lpFileSizeHigh: integer): integer 
		proc WriteFile(hFile: HANDLE; lpBuffer: PtrVoid; nNumberOfBytesToWrite: integer; lpNumberOfBytesWritten: unsafe pointer to integer; var lpOverlapped: OVERLAPPED): BOOL 
		proc ReadFile(hFile: HANDLE; lpBuffer: PtrVoid; nNumberOfBytesToRead: integer; var lpNumberOfBytesRead: integer; var lpOverlapped: OVERLAPPED): BOOL 
		proc FlushFileBuffers(hFile: HANDLE): BOOL 
		proc SetFilePointer(hFile: HANDLE; lDistanceToMove: integer; var lpDistanceToMoveHigh: integer; dwMoveMethod: integer): integer 
		proc FindClose(hFindFile: HANDLE): BOOL 
		proc GetFileTime(hFile: HANDLE; var lpCreationTime: FILETIME; var lpLastAccessTime: FILETIME; var lpLastWriteTime: FILETIME): BOOL 
		proc CloseHandle(hObject: HANDLE): BOOL 
		proc MulDiv(nNumber: integer; nNumerator: integer; nDenominator: integer): integer 
		proc GetSystemTime(var lpSystemTime: SYSTEMTIME) 
		proc GetLocalTime(var lpSystemTime: SYSTEMTIME) 
		proc GetTimeZoneInformation(var lpTimeZoneInformation: TIME_ZONE_INFORMATION): integer 
		proc FileTimeToSystemTime(var lpFileTime: FILETIME; var lpSystemTime: SYSTEMTIME): BOOL 
		proc GetTickCount(): integer 
		proc FormatMessageW(dwFlags: set; lpSource: PtrVoid; dwMessageId: integer; dwLanguageId: integer; lpBuffer: PtrWSTR; nSize: integer; var Arguments: PtrWSTR): integer 
		proc GetModuleFileNameW(hModule: HMODULE; lpFilename: PtrWSTR; nSize: integer): integer 
		proc GetModuleHandleW(lpModuleName: PtrWSTR): HMODULE 
		proc CreateProcessW(lpApplicationName: PtrWSTR; lpCommandLine: PtrWSTR; var lpProcessAttributes: SECURITY_ATTRIBUTES; var lpThreadAttributes: SECURITY_ATTRIBUTES; bInheritHandles: BOOL; dwCreationFlags: set; lpEnvironment: PtrVoid; lpCurrentDirectory: PtrWSTR; var lpStartupInfo: STARTUPINFOW; var lpProcessInformation: PROCESS_INFORMATION): BOOL 
		proc GetStartupInfoW(var lpStartupInfo: STARTUPINFOW) 
		proc GetCommandLineW(): PtrWSTR 
		proc ExpandEnvironmentStringsW(lpSrc: PtrWSTR; lpDst: PtrWSTR; nSize: integer): integer 
		proc GlobalAddAtomW(lpString: PtrWSTR): ATOM 
		proc GlobalFindAtomW(lpString: PtrWSTR): ATOM 
		proc GlobalGetAtomNameW(nAtom: ATOM; lpBuffer: PtrWSTR; nSize: integer): integer 
		proc GetProfileIntW(lpAppName: PtrWSTR; lpKeyName: PtrWSTR; nDefault: integer): integer 
		proc GetPrivateProfileStringW(lpAppName: PtrWSTR; lpKeyName: PtrWSTR; lpDefault: PtrWSTR; lpReturnedString: PtrWSTR; nSize: integer; lpFileName: PtrWSTR): integer 
		proc WritePrivateProfileStringW(lpAppName: PtrWSTR; lpKeyName: PtrWSTR; lpString: PtrWSTR; lpFileName: PtrWSTR): BOOL 
		proc GetDriveTypeW(lpRootPathName: PtrWSTR): integer 
		proc GetTempPathW(nBufferLength: integer; lpBuffer: PtrWSTR): integer 
		proc GetCurrentDirectoryW(nBufferLength: integer; lpBuffer: PtrWSTR): integer 
		proc CreateDirectoryW(lpPathName: PtrWSTR; var lpSecurityAttributes: SECURITY_ATTRIBUTES): BOOL 
		proc GetFullPathNameW(lpFileName: PtrWSTR; nBufferLength: integer; lpBuffer: PtrWSTR; lpFilePart: PtrWSTR): integer 
		proc CreateFileW(lpFileName: PtrWSTR; dwDesiredAccess: set; dwShareMode: set; var lpSecurityAttributes: SECURITY_ATTRIBUTES; dwCreationDisposition: integer; dwFlagsAndAttributes: set; hTemplateFile: HANDLE): HANDLE 
		proc SetFileAttributesW(lpFileName: PtrWSTR; dwFileAttributes: set): BOOL 
		proc GetFileAttributesW(lpFileName: PtrWSTR): integer 
		proc DeleteFileW(lpFileName: PtrWSTR): BOOL 
		proc FindFirstFileW(lpFileName: PtrWSTR; var lpFindFileData: WIN32_FIND_DATAW): HANDLE 
		proc FindNextFileW(hFindFile: HANDLE; var lpFindFileData: WIN32_FIND_DATAW): BOOL 
		proc MoveFileW(lpExistingFileName: PtrWSTR; lpNewFileName: PtrWSTR): BOOL 
		proc GetVolumeInformationW(lpRootPathName: PtrWSTR; lpVolumeNameBuffer: PtrWSTR; nVolumeNameSize: integer; var lpVolumeSerialNumber: integer; var lpMaximumComponentLength: integer; var lpFileSystemFlags: set; lpFileSystemNameBuffer: PtrWSTR; nFileSystemNameSize: integer): BOOL 
		proc BitBlt(p0: HDC; p1: integer; p2: integer; p3: integer; p4: integer; p5: HDC; p6: integer; p7: integer; p8: integer): BOOL 
		proc CreateBitmap(p0: integer; p1: integer; p2: integer; p3: integer; p4: PtrVoid): HBITMAP 
		proc CreateCompatibleBitmap(p0: HDC; p1: integer; p2: integer): HBITMAP 
		proc CreateCompatibleDC(p0: HDC): HDC 
		proc CreateDCW(p0: PtrWSTR; p1: PtrWSTR; p2: PtrWSTR; var p3: DEVMODEW): HDC 
		proc CreateFontW(p0: integer; p1: integer; p2: integer; p3: integer; p4: integer; p5: integer; p6: integer; p7: integer; p8: integer; p9: integer; p10: integer; p11: integer; p12: integer; p13: PtrWSTR): HFONT 
		proc CreatePen(p0: integer; p1: integer; p2: COLORREF): HPEN 
		proc CreatePatternBrush(p0: HBITMAP): HBRUSH 
		proc CreateRectRgn(p0: integer; p1: integer; p2: integer; p3: integer): HRGN 
		proc CreateRectRgnIndirect(var p0: RECT): HRGN 
		proc CreateSolidBrush(p0: COLORREF): HBRUSH 
		proc DeleteDC(p0: HDC): BOOL 
		proc DeleteObject(p0: HGDIOBJ): BOOL 
		proc Ellipse(p0: HDC; p1: integer; p2: integer; p3: integer; p4: integer): BOOL 
		proc EnumFontFamiliesW(p0: HDC; p1: PtrWSTR; p2: NEWFONTENUMPROCW; p3: LPARAM): integer 
		proc Escape(p0: HDC; p1: integer; p2: integer; p3: PtrSTR; p4: PtrVoid): integer 
		proc GetCharWidthW(p0: HDC; p1: integer; p2: integer; var p3: carray of integer): BOOL 
		proc GetCharWidth32W(p0: HDC; p1: integer; p2: integer; var p3: carray of integer): BOOL 
		proc GetCharABCWidthsW(p0: HDC; p1: integer; p2: integer; var p3: carray of ABC): BOOL 
		proc GetDeviceCaps(p0: HDC; p1: integer): integer 
		proc GetStockObject(p0: integer): HGDIOBJ 
		proc GetTextExtentPoint32W(p0: HDC; p1: PtrWSTR; p2: integer; var p3: SIZE): BOOL 
		proc IntersectClipRect(p0: HDC; p1: integer; p2: integer; p3: integer; p4: integer): integer 
		proc LineTo(p0: HDC; p1: integer; p2: integer): BOOL 
		proc PatBlt(p0: HDC; p1: integer; p2: integer; p3: integer; p4: integer; p5: integer): BOOL 
		proc PlayMetaFile(p0: HDC; p1: HMETAFILE): BOOL 
		proc Rectangle(p0: HDC; p1: integer; p2: integer; p3: integer; p4: integer): BOOL 
		proc RestoreDC(p0: HDC; p1: integer): BOOL 
		proc SaveDC(p0: HDC): integer 
		proc SelectClipRgn(p0: HDC; p1: HRGN): integer 
		proc SelectObject(p0: HDC; p1: HGDIOBJ): HGDIOBJ 
		proc SetBkColor(p0: HDC; p1: COLORREF): COLORREF 
		proc SetBkMode(p0: HDC; p1: integer): integer 
		proc SetMapMode(p0: HDC; p1: integer): integer 
		proc SetPolyFillMode(p0: HDC; p1: integer): integer 
		proc StretchBlt(p0: HDC; p1: integer; p2: integer; p3: integer; p4: integer; p5: HDC; p6: integer; p7: integer; p8: integer; p9: integer; p10: integer): BOOL 
		proc SetStretchBltMode(p0: HDC; p1: integer): integer 
		proc SetTextColor(p0: HDC; p1: COLORREF): COLORREF 
		proc SetTextAlign(p0: HDC; p1: set): set 
		proc GetTextMetricsW(p0: HDC; var p1: TEXTMETRICW): BOOL 
		proc StartDocW(p0: HDC; var p1: DOCINFOW): integer 
		proc EndDoc(p0: HDC): integer 
		proc StartPage(p0: HDC): integer 
		proc EndPage(p0: HDC): integer 
		proc AbortDoc(p0: HDC): integer 
		proc SetAbortProc(p0: HDC; p1: ABORTPROC): integer 
		proc MoveToEx(p0: HDC; p1: integer; p2: integer; var p3: POINT): BOOL 
		proc TextOutA(p0: HDC; p1: integer; p2: integer; p3: PtrSTR; p4: integer): BOOL 
		proc TextOutW(p0: HDC; p1: integer; p2: integer; p3: PtrWSTR; p4: integer): BOOL 
		proc ExtTextOutA(p0: HDC; p1: integer; p2: integer; p3: integer; var p4: RECT; p5: PtrSTR; p6: integer; var p7: carray of integer): BOOL 
		proc ExtTextOutW(p0: HDC; p1: integer; p2: integer; p3: integer; var p4: RECT; p5: PtrWSTR; p6: integer; var p7: carray of integer): BOOL 
		proc Polygon(p0: HDC; var p1: carray of POINT; p2: integer): BOOL 
		proc Polyline(p0: HDC; var p1: carray of POINT; p2: integer): BOOL 
		proc SetViewportExtEx(p0: HDC; p1: integer; p2: integer; var p3: SIZE): BOOL 
		proc SetViewportOrgEx(p0: HDC; p1: integer; p2: integer; var p3: POINT): BOOL 
		proc SetWindowOrgEx(p0: HDC; p1: integer; p2: integer; var p3: POINT): BOOL 
		proc SetBrushOrgEx(p0: HDC; p1: integer; p2: integer; var p3: POINT): BOOL 
		proc GetTextFaceW(p0: HDC; p1: integer; p2: PtrWSTR): integer 
		proc UnrealizeObject(p0: HGDIOBJ): BOOL 
		proc RegisterWindowMessageW(lpString: PtrWSTR): integer 
		proc GetMessageW(var lpMsg: MSG; hWnd: HWND; wMsgFilterMin: integer; wMsgFilterMax: integer): BOOL 
		proc TranslateMessage(var lpMsg: MSG): BOOL 
		proc DispatchMessageW(var lpMsg: MSG): integer 
		proc PeekMessageW(var lpMsg: MSG; hWnd: HWND; wMsgFilterMin: integer; wMsgFilterMax: integer; wRemoveMsg: integer): BOOL 
		proc SendMessageW(hWnd: HWND; Msg: integer; wParam: WPARAM; lParam: LPARAM): LRESULT 
		proc DefWindowProcW(hWnd: HWND; Msg: integer; wParam: WPARAM; lParam: LPARAM): LRESULT 
		proc PostQuitMessage(nExitCode: integer) 
		proc RegisterClassW(var lpWndClass: WNDCLASSW): ATOM 
		proc CreateWindowExW(dwExStyle: set; lpClassName: PtrWSTR; lpWindowName: PtrWSTR; dwStyle: set; X: integer; Y: integer; nWidth: integer; nHeight: integer; hWndParent: HWND; hMenu: HMENU; hInstance: HINSTANCE; lpParam: PtrVoid): HWND 
		proc DestroyWindow(hWnd: HWND): BOOL 
		proc ShowWindow(hWnd: HWND; nCmdShow: integer): BOOL 
		proc MoveWindow(hWnd: HWND; X: integer; Y: integer; nWidth: integer; nHeight: integer; bRepaint: BOOL): BOOL 
		proc SetWindowPos(hWnd: HWND; hWndInsertAfter: HWND; X: integer; Y: integer; cx: integer; cy: integer; uFlags: set): BOOL 
		proc GetWindowPlacement(hWnd: HWND; var lpwndpl: WINDOWPLACEMENT): BOOL 
		proc SetWindowPlacement(hWnd: HWND; var lpwndpl: WINDOWPLACEMENT): BOOL 
		proc IsWindowVisible(hWnd: HWND): BOOL 
		proc IsIconic(hWnd: HWND): BOOL 
		proc BringWindowToTop(hWnd: HWND): BOOL 
		proc IsZoomed(hWnd: HWND): BOOL 
		proc GetDlgItem(hDlg: HWND; nIDDlgItem: integer): HWND 
		proc SetFocus(hWnd: HWND): HWND 
		proc GetFocus(): HWND 
		proc GetKeyState(nVirtKey: integer): shortint 
		proc GetAsyncKeyState(vKey: integer): shortint 
		proc VkKeyScanW(ch: wchar): shortint 
		proc GetCapture(): HWND 
		proc SetCapture(hWnd: HWND): HWND 
		proc ReleaseCapture(): BOOL 
		proc SetTimer(hWnd: HWND; nIDEvent: integer; uElapse: integer; lpTimerFunc: TIMERPROC): integer 
		proc EnableWindow(hWnd: HWND; bEnable: BOOL): BOOL 
		proc IsWindowEnabled(hWnd: HWND): BOOL 
		proc GetSystemMetrics(nIndex: integer): integer 
		proc GetMenu(hWnd: HWND): HMENU 
		proc GetMenuStringW(hMenu: HMENU; uIDItem: integer; lpString: PtrWSTR; nMaxCount: integer; uFlag: set): integer 
		proc GetMenuState(hMenu: HMENU; uId: integer; uFlags: set): integer 
		proc DrawMenuBar(hWnd: HWND): BOOL 
		proc GetSystemMenu(hWnd: HWND; bRevert: BOOL): HMENU 
		proc CreateMenu(): HMENU 
		proc CreatePopupMenu(): HMENU 
		proc DestroyMenu(hMenu: HMENU): BOOL 
		proc CheckMenuItem(hMenu: HMENU; uIDCheckItem: integer; uCheck: set): integer 
		proc EnableMenuItem(hMenu: HMENU; uIDEnableItem: integer; uEnable: set): BOOL 
		proc InsertMenuW(hMenu: HMENU; uPosition: integer; uFlags: set; uIDNewItem: integer; lpNewItem: PtrWSTR): BOOL 
		proc AppendMenuW(hMenu: HMENU; uFlags: set; uIDNewItem: integer; lpNewItem: PtrWSTR): BOOL 
		proc ModifyMenuW(hMnu: HMENU; uPosition: integer; uFlags: set; uIDNewItem: integer; lpNewItem: PtrWSTR): BOOL 
		proc RemoveMenu(hMenu: HMENU; uPosition: integer; uFlags: set): BOOL 
		proc TrackPopupMenu(hMenu: HMENU; uFlags: set; x: integer; y: integer; nReserved: integer; hWnd: HWND; var prcRect: RECT): BOOL 
		proc UpdateWindow(hWnd: HWND): BOOL 
		proc SetForegroundWindow(hWnd: HWND): BOOL 
		proc GetDC(hWnd: HWND): HDC 
		proc ReleaseDC(hWnd: HWND; hDC: HDC): integer 
		proc BeginPaint(hWnd: HWND; var lpPaint: PAINTSTRUCT): HDC 
		proc EndPaint(hWnd: HWND; var lpPaint: PAINTSTRUCT): BOOL 
		proc InvalidateRect(hWnd: HWND; var lpRect: RECT; bErase: BOOL): BOOL 
		proc InvalidateRgn(hWnd: HWND; hRgn: HRGN; bErase: BOOL): BOOL 
		proc ScrollDC(hDC: HDC; dx: integer; dy: integer; var lprcScroll: RECT; var lprcClip: RECT; hrgnUpdate: HRGN; var lprcUpdate: RECT): BOOL 
		proc SetScrollPos(hWnd: HWND; nBar: integer; nPos: integer; bRedraw: BOOL): integer 
		proc GetScrollPos(hWnd: HWND; nBar: integer): integer 
		proc SetScrollRange(hWnd: HWND; nBar: integer; nMinPos: integer; nMaxPos: integer; bRedraw: BOOL): BOOL 
		proc ShowScrollBar(hWnd: HWND; wBar: integer; bShow: BOOL): BOOL 
		proc EnableScrollBar(hWnd: HWND; wSBflags: integer; wArrows: integer): BOOL 
		proc SetWindowTextW(hWnd: HWND; lpString: PtrWSTR): BOOL 
		proc GetWindowTextW(hWnd: HWND; lpString: PtrWSTR; nMaxCount: integer): integer 
		proc GetWindowTextLengthW(hWnd: HWND): integer 
		proc GetClientRect(hWnd: HWND; var lpRect: RECT): BOOL 
		proc GetWindowRect(hWnd: HWND; var lpRect: RECT): BOOL 
		proc MessageBoxW(hWnd: HWND; lpText: PtrWSTR; lpCaption: PtrWSTR; uType: set): integer 
		proc SetCursor(hCursor: HCURSOR): HCURSOR 
		proc ClientToScreen(hWnd: HWND; var lpPoint: POINT): BOOL 
		proc ScreenToClient(hWnd: HWND; var lpPoint: POINT): BOOL 
		proc WindowFromPoint(Point: POINT): HWND 
		proc ChildWindowFromPoint(hWndParent: HWND; Point: POINT): HWND 
		proc GetSysColor(nIndex: integer): integer 
		proc FillRect(hDC: HDC; var lprc: RECT; hbr: HBRUSH): integer 
		proc GetWindowLongW(hWnd: HWND; nIndex: integer): integer 
		proc SetWindowLongW(hWnd: HWND; nIndex: integer; dwNewLong: integer): integer 
		proc GetClassLongW(hWnd: HWND; nIndex: integer): integer 
		proc SetClassLongW(hWnd: HWND; nIndex: integer; dwNewLong: integer): integer 
		proc GetParent(hWnd: HWND): HWND 
		proc GetClassNameW(hWnd: HWND; lpClassName: PtrWSTR; nMaxCount: integer): integer 
		proc GetTopWindow(hWnd: HWND): HWND 
		proc GetWindowThreadProcessId(hWnd: HWND; var lpdwProcessId: integer): integer 
		proc GetWindow(hWnd: HWND; uCmd: integer): HWND 
		proc LoadCursorW(hInstance: HINSTANCE; lpCursorName: PtrWSTR): HCURSOR 
		proc LoadIconW(hInstance: HINSTANCE; lpIconName: PtrWSTR): HICON 
		proc DestroyIcon(hIcon: HICON): BOOL 
		proc LoadImageW(p0: HINSTANCE; p1: PtrWSTR; p2: integer; p3: integer; p4: integer; p5: integer): HANDLE 
		proc SetScrollInfo(p0: HWND; p1: integer; var p2: SCROLLINFO; p3: BOOL): integer 
		proc GetScrollInfo(p0: HWND; p1: integer; var p2: SCROLLINFO): BOOL 
		proc DefFrameProcW(hWnd: HWND; hWndMDIClient: HWND; uMsg: integer; wParam: WPARAM; lParam: LPARAM): LRESULT 
		proc DefMDIChildProcW(hWnd: HWND; uMsg: integer; wParam: WPARAM; lParam: LPARAM): LRESULT 
		proc TranslateMDISysAccel(hWndClient: HWND; var lpMsg: MSG): BOOL 
		proc SystemParametersInfoW(uiAction: integer; uiParam: integer; pvParam: PtrVoid; fWinIni: integer): BOOL 
		proc GetLocaleInfoW(Locale: LCID; LCType: LCTYPE; lpLCData: PtrWSTR; cchData: integer): integer 
		proc GetTimeFormatW(Locale: LCID; dwFlags: set; var lpTime: SYSTEMTIME; lpFormat: PtrWSTR; lpTimeStr: PtrWSTR; cchTime: integer): integer 
		proc GetDateFormatW(Locale: LCID; dwFlags: set; var lpDate: SYSTEMTIME; lpFormat: PtrWSTR; lpDateStr: PtrWSTR; cchDate: integer): integer 
		proc RegCloseKey(hKey: HKEY): integer 
		proc RegCreateKeyW(hKey: HKEY; lpSubKey: PtrWSTR; var phkResult: HKEY): integer 
		proc RegOpenKeyW(hKey: HKEY; lpSubKey: PtrWSTR; var phkResult: HKEY): integer 
		proc RegQueryValueW(hKey: HKEY; lpSubKey: PtrWSTR; lpValue: PtrWSTR; var lpcbValue: integer): integer 
		proc RegSetValueW(hKey: HKEY; lpSubKey: PtrWSTR; dwType: integer; lpData: PtrWSTR; cbData: integer): integer 
		proc DragQueryFileW(p0: HDROP; p1: integer; p2: PtrWSTR; p3: integer): integer 
		proc DragFinish(p0: HDROP) 
		proc DragAcceptFiles(p0: HWND; p1: BOOL) 
		proc ShellExecuteExW(var lpExecInfo: SHELLEXECUTEINFOW): BOOL 
	
end Api